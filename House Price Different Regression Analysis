{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"colab":{"name":"Paris House Price Regression Analysis","provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/paris-house-price-regression-analysis-b819540c-6fa7-47fc-aacf-38de14fea62e.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240515/auto/storage/goog4_request&X-Goog-Date=20240515T073631Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=2b9d5bc64d9b7d9c276216c0f1a8fdd2d7120f05cdc39e6001374f6fcbce605b165df7f95ae90672d686ca666ae3735338dff6a17e0dd3ac4f0c086df73244407fc7c14437da36491d52bc591783ba515bb59cf818d405159519b51c3455abb18d2e5d7475df617b178d59bea5d3b06d110bf520f13ed5e2d5094a050d10c46c38a82a8f10c105cf05e2bb79efaaafa24baa06fc7f0176d9be8a32e234a67b15fdaa15f2b3b249d0af91a6bf356bb27ea3646869816d5e4ad34f386074b84770c15d08dccad74931348211bda37de819472cef09165a4ba8c1d1559a70a8876e6e58ce12043bcbd02a687808cc9128f5ce324d3ad171269066ea0f3cbccace21","timestamp":1715759401367}]}},"nbformat_minor":0,"nbformat":4,"cells":[{"source":["\n","# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES\n","# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","\n","import os\n","import sys\n","from tempfile import NamedTemporaryFile\n","from urllib.request import urlopen\n","from urllib.parse import unquote, urlparse\n","from urllib.error import HTTPError\n","from zipfile import ZipFile\n","import tarfile\n","import shutil\n","\n","CHUNK_SIZE = 40960\n","DATA_SOURCE_MAPPING = 'paris-housing-price-prediction:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F1440281%2F2382940%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240515%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240515T073631Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D525c63a303c1dd15f2dac19ca3c9034474cdb08b35b0aa0de0f25455f7a028ddbdf5355d5a87ec061e97bacee68a59720d3f3a4161ae4ca3bcd32f6dbbbbd4661f657abfd93e4be691bf533b08529d516e7268913501b1fd92a7bca4bb4ad61133b61e0f953a6127b8bca0e4b30ababfdb1c25b7403a966bd734da13e71d34f80f63da2d94a418af5ba32d5ef1689760b47bcb2dc96666d7ff649c7f4be36a499d915144ee0498921b7a3da4bcab8ba654fb7ac2bb1e2e80a8dd3905e43d982f793475371a9bb9edc9b1b5a9b510ca95ce78b061cf8ea31c905e1c275954b004d185bbee6aa4711f790360f29bdccbd0ee2bc00a4ffc39555e27fa4f2572ab0c'\n","\n","KAGGLE_INPUT_PATH='/kaggle/input'\n","KAGGLE_WORKING_PATH='/kaggle/working'\n","KAGGLE_SYMLINK='kaggle'\n","\n","!umount /kaggle/input/ 2> /dev/null\n","shutil.rmtree('/kaggle/input', ignore_errors=True)\n","os.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)\n","os.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)\n","\n","try:\n","  os.symlink(KAGGLE_INPUT_PATH, os.path.join(\"..\", 'input'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","try:\n","  os.symlink(KAGGLE_WORKING_PATH, os.path.join(\"..\", 'working'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","\n","for data_source_mapping in DATA_SOURCE_MAPPING.split(','):\n","    directory, download_url_encoded = data_source_mapping.split(':')\n","    download_url = unquote(download_url_encoded)\n","    filename = urlparse(download_url).path\n","    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)\n","    try:\n","        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:\n","            total_length = fileres.headers['content-length']\n","            print(f'Downloading {directory}, {total_length} bytes compressed')\n","            dl = 0\n","            data = fileres.read(CHUNK_SIZE)\n","            while len(data) > 0:\n","                dl += len(data)\n","                tfile.write(data)\n","                done = int(50 * dl / int(total_length))\n","                sys.stdout.write(f\"\\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded\")\n","                sys.stdout.flush()\n","                data = fileres.read(CHUNK_SIZE)\n","            if filename.endswith('.zip'):\n","              with ZipFile(tfile) as zfile:\n","                zfile.extractall(destination_path)\n","            else:\n","              with tarfile.open(tfile.name) as tarfile:\n","                tarfile.extractall(destination_path)\n","            print(f'\\nDownloaded and uncompressed: {directory}')\n","    except HTTPError as e:\n","        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')\n","        continue\n","    except OSError as e:\n","        print(f'Failed to load {download_url} to path {destination_path}')\n","        continue\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"WJtk3VUVLnDz"},"cell_type":"code","outputs":[],"execution_count":null},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import warnings\n","%matplotlib inline\n","warnings.filterwarnings('ignore')"],"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2023-03-03T16:31:55.766017Z","iopub.execute_input":"2023-03-03T16:31:55.767078Z","iopub.status.idle":"2023-03-03T16:31:57.238551Z","shell.execute_reply.started":"2023-03-03T16:31:55.767029Z","shell.execute_reply":"2023-03-03T16:31:57.236983Z"},"trusted":true,"id":"YPivstfcLnD5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/kaggle/input/paris-housing-price-prediction/ParisHousing.csv')\n","df.head()"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:31:57.242434Z","iopub.execute_input":"2023-03-03T16:31:57.242912Z","iopub.status.idle":"2023-03-03T16:31:57.35244Z","shell.execute_reply.started":"2023-03-03T16:31:57.242866Z","shell.execute_reply":"2023-03-03T16:31:57.35115Z"},"trusted":true,"id":"7mit_lVhLnD5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Objectives\n","\n","* Proceed to explanatory data analysis, data overview & cleasing\n","* Use seaborn to create visualization through density plots\n","* Analyze the correlation between all the independent variables that influence the changes in value of our dependant variable, the price\n","* Use machine learning to split the data and test different models and identify one to predict housing price in Paris."],"metadata":{"id":"UmF0VBQuLnD6"}},{"cell_type":"markdown","source":[],"metadata":{"id":"Sx621mhkLnD7"}},{"cell_type":"markdown","source":["## Data Exploration"],"metadata":{"id":"-L3r1CHKLnD8"}},{"cell_type":"code","source":["# statistical info\n","df.describe()"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:31:57.354279Z","iopub.execute_input":"2023-03-03T16:31:57.354781Z","iopub.status.idle":"2023-03-03T16:31:57.456744Z","shell.execute_reply.started":"2023-03-03T16:31:57.354736Z","shell.execute_reply":"2023-03-03T16:31:57.455195Z"},"trusted":true,"id":"gZDR7dn-LnD8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# datatype info\n","df.info()"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:31:57.458761Z","iopub.execute_input":"2023-03-03T16:31:57.459402Z","iopub.status.idle":"2023-03-03T16:31:57.484876Z","shell.execute_reply.started":"2023-03-03T16:31:57.459361Z","shell.execute_reply":"2023-03-03T16:31:57.483048Z"},"trusted":true,"id":"6BAAOaTzLnD9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# check for null values\n","df.isnull().sum()"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:31:57.48919Z","iopub.execute_input":"2023-03-03T16:31:57.489887Z","iopub.status.idle":"2023-03-03T16:31:57.500752Z","shell.execute_reply.started":"2023-03-03T16:31:57.489834Z","shell.execute_reply":"2023-03-03T16:31:57.499487Z"},"trusted":true,"id":"Hip-19xaLnD9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Data visualization through density plots"],"metadata":{"id":"yQA3LSKLLnD9"}},{"cell_type":"code","source":["# create box plots\n","fig, ax = plt.subplots(ncols=7, nrows=2, figsize=(20, 10))\n","index = 0\n","ax = ax.flatten()\n","\n","for col, value in df.items():\n","    sns.boxplot(y=col, data=df, ax=ax[index])\n","    index += 1\n","plt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:31:57.502604Z","iopub.execute_input":"2023-03-03T16:31:57.50311Z","iopub.status.idle":"2023-03-03T16:31:59.536334Z","shell.execute_reply.started":"2023-03-03T16:31:57.503062Z","shell.execute_reply":"2023-03-03T16:31:59.534067Z"},"trusted":true,"id":"v6qamrnfLnD-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# create dist plot\n","fig, ax = plt.subplots(ncols=7, nrows=2, figsize=(20, 10))\n","index = 0\n","ax = ax.flatten()\n","\n","for col, value in df.items():\n","    sns.distplot(value, ax=ax[index])\n","    index += 1\n","plt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:32:44.473193Z","iopub.execute_input":"2023-03-03T16:32:44.473621Z","iopub.status.idle":"2023-03-03T16:32:47.98901Z","shell.execute_reply.started":"2023-03-03T16:32:44.473586Z","shell.execute_reply":"2023-03-03T16:32:47.987317Z"},"trusted":true,"id":"ufyTM1QlLnD-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Correlation Analysis"],"metadata":{"id":"vQukAHiKLnD_"}},{"cell_type":"code","source":["corr = df.corr()\n","plt.figure(figsize=(20,10))\n","sns.heatmap(corr, annot=True, cmap='coolwarm')"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:32:51.103321Z","iopub.execute_input":"2023-03-03T16:32:51.105177Z","iopub.status.idle":"2023-03-03T16:32:53.248192Z","shell.execute_reply.started":"2023-03-03T16:32:51.105112Z","shell.execute_reply":"2023-03-03T16:32:53.246412Z"},"trusted":true,"id":"nxTA18X5LnD_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* We observe a highly positive correlation between **price** and **squareMeters**.\n","* We will later eliminate this correlation by ignoring any of the variables.\n","* Surprisingly, some great features such as having **a pool**, **a garage**, **a basement** or **a guestroom** have a little but negative correlation with **price**.\n"],"metadata":{"id":"kFWBj8WNLnD_"}},{"cell_type":"code","source":["sns.regplot(y=df['price'], x=df['squareMeters'])"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:32:57.042683Z","iopub.execute_input":"2023-03-03T16:32:57.043104Z","iopub.status.idle":"2023-03-03T16:32:57.926241Z","shell.execute_reply.started":"2023-03-03T16:32:57.043068Z","shell.execute_reply":"2023-03-03T16:32:57.924612Z"},"trusted":true,"id":"mIEF8bDhLnD_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* Perfect positive linear correlation"],"metadata":{"id":"Fhopj0TwLnD_"}},{"cell_type":"code","source":["sns.regplot(y=df['price'], x=df['numberOfRooms'])"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:32:59.943535Z","iopub.execute_input":"2023-03-03T16:32:59.944047Z","iopub.status.idle":"2023-03-03T16:33:00.790611Z","shell.execute_reply.started":"2023-03-03T16:32:59.944004Z","shell.execute_reply":"2023-03-03T16:33:00.789081Z"},"trusted":true,"id":"EanrgeuULnEA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* On the other hand, it his hard to define the effect of number of rooms on the price, it seems like number of room does not have any effect on price."],"metadata":{"id":"wFkKX0BVLnEA"}},{"cell_type":"markdown","source":["## Model Traning"],"metadata":{"id":"aU4J0FxZLnEA"}},{"cell_type":"markdown","source":["* split the data for training"],"metadata":{"id":"qLNEarKNLnEA"}},{"cell_type":"code","source":["X = df.drop(columns=['price', 'squareMeters'], axis=1)\n","y = df['price']"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:33:12.259077Z","iopub.execute_input":"2023-03-03T16:33:12.259896Z","iopub.status.idle":"2023-03-03T16:33:12.268414Z","shell.execute_reply.started":"2023-03-03T16:33:12.259844Z","shell.execute_reply":"2023-03-03T16:33:12.266603Z"},"trusted":true,"id":"yFbK0oQSLnEA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* If you train and test the dataset completely, the results will be inaccurate. Hence, we will use **train_test_split**\n","* We will add random_state with the attribute 42 to get the same split upon re-running.\n","* cv_score = we use cross-value score to define the best validation model\n","* cv=5 because we split the data in 5\n","* **np.abs** will convert the negative score to positive and **np.mean** will give the average value of 5 scores."],"metadata":{"id":"lD9w0OltLnEA"}},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score, train_test_split\n","from sklearn.metrics import mean_squared_error\n","def train(model, X, y):\n","    # train the model\n","    x_train, x_test, y_train, y_test = train_test_split(X, y, random_state=42)\n","    model.fit(x_train, y_train)\n","\n","    # predict the training set\n","    pred = model.predict(x_test)\n","\n","    # perform cross-validation\n","    cv_score = cross_val_score(model, X, y, scoring='neg_mean_squared_error', cv=5)\n","    cv_score = np.abs(np.mean(cv_score))\n","\n","    print(\"Model Report\")\n","    print(\"MSE:\",mean_squared_error(y_test, pred))\n","    print('CV Score:', cv_score)"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:33:20.780524Z","iopub.execute_input":"2023-03-03T16:33:20.781136Z","iopub.status.idle":"2023-03-03T16:33:20.790576Z","shell.execute_reply.started":"2023-03-03T16:33:20.781091Z","shell.execute_reply":"2023-03-03T16:33:20.788402Z"},"trusted":true,"id":"g3NZSBpzLnEB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Linear Regression"],"metadata":{"id":"5siyIIh2LnEB"}},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","model = LinearRegression(normalize=True)\n","train(model, X, y)\n","coef = pd.Series(model.coef_, X.columns).sort_values()\n","coef.plot(kind='bar', title='Model Coefficients')"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:33:25.199531Z","iopub.execute_input":"2023-03-03T16:33:25.200476Z","iopub.status.idle":"2023-03-03T16:33:25.968792Z","shell.execute_reply.started":"2023-03-03T16:33:25.200434Z","shell.execute_reply":"2023-03-03T16:33:25.96724Z"},"trusted":true,"id":"Y9gXuoguLnEB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* **hasPool** shows a high negative coefficient and **hasStormProtector** shows a small positive coefficient."],"metadata":{"id":"h1dZtEkcLnEB"}},{"cell_type":"markdown","source":["### Decision Tree"],"metadata":{"id":"useLAiRwLnEB"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeRegressor\n","model = DecisionTreeRegressor()\n","train(model, X, y)\n","coef = pd.Series(model.feature_importances_, X.columns).sort_values(ascending=False)\n","coef.plot(kind='bar', title='Feature Importance')"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:33:30.552575Z","iopub.execute_input":"2023-03-03T16:33:30.55311Z","iopub.status.idle":"2023-03-03T16:33:31.738506Z","shell.execute_reply.started":"2023-03-03T16:33:30.55307Z","shell.execute_reply":"2023-03-03T16:33:31.736749Z"},"trusted":true,"id":"J9ZKJNQWLnEB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["* All variables shows a positive correlation on price, same goes for the following models."],"metadata":{"id":"ekPEOZmkLnEB"}},{"cell_type":"markdown","source":["### Random Forest"],"metadata":{"id":"CPbvvm5VLnEC"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestRegressor\n","model = RandomForestRegressor()\n","train(model, X, y)\n","coef = pd.Series(model.feature_importances_, X.columns).sort_values(ascending=False)\n","coef.plot(kind='bar', title='Feature Importance')"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:33:43.00017Z","iopub.execute_input":"2023-03-03T16:33:43.001858Z","iopub.status.idle":"2023-03-03T16:34:26.202727Z","shell.execute_reply.started":"2023-03-03T16:33:43.001783Z","shell.execute_reply":"2023-03-03T16:34:26.2009Z"},"trusted":true,"id":"HPGWlR_wLnEC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Extra Tree"],"metadata":{"id":"7HjhX7WiLnEC"}},{"cell_type":"code","source":["from sklearn.ensemble import ExtraTreesRegressor\n","model = ExtraTreesRegressor()\n","train(model, X, y)\n","coef = pd.Series(model.feature_importances_, X.columns).sort_values(ascending=False)\n","coef.plot(kind='bar', title='Feature Importance')"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:34:46.877684Z","iopub.execute_input":"2023-03-03T16:34:46.878674Z","iopub.status.idle":"2023-03-03T16:35:07.502886Z","shell.execute_reply.started":"2023-03-03T16:34:46.878629Z","shell.execute_reply":"2023-03-03T16:35:07.501938Z"},"trusted":true,"id":"9b3x7Yc4LnEC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### XGBoost"],"metadata":{"id":"dU4F4G2JLnEC"}},{"cell_type":"code","source":["import xgboost as xgb\n","model = xgb.XGBRegressor()\n","train(model, X, y)\n","coef = pd.Series(model.feature_importances_, X.columns).sort_values(ascending=False)\n","coef.plot(kind='bar', title='Feature Importance')"],"metadata":{"execution":{"iopub.status.busy":"2023-03-03T16:35:07.50506Z","iopub.execute_input":"2023-03-03T16:35:07.505431Z","iopub.status.idle":"2023-03-03T16:35:14.514248Z","shell.execute_reply.started":"2023-03-03T16:35:07.505395Z","shell.execute_reply":"2023-03-03T16:35:14.513033Z"},"trusted":true,"id":"EPUHvvCBLnED"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Conclusion"],"metadata":{"id":"usSgQtY0LnED"}},{"cell_type":"markdown","source":["* Every models shows a very high Mean Squared Error estimator and high cross-value which makes none of the models usable. However, the best among the five models remains linear regressor.\n","* I feel like most the variables have such a low statistical significance that it is difficult to predict the price, we can just summarize the fact that size of the propertu matters more than all other variables put together. Therefore, we could ignore most of the parameters and create a more simplified model with only significant independent variable to reduce the out of our results."],"metadata":{"id":"kRtg0dyvLnED"}}]}